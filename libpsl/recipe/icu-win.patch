---
 fuzz/libpsl_fuzzer.c |  6 +++++-
 meson.build          | 12 ++++++++++++
 meson_options.txt    |  2 +-
 src/psl.c            | 16 ++++++++++++----
 4 files changed, 30 insertions(+), 6 deletions(-)

diff --git a/fuzz/libpsl_fuzzer.c b/fuzz/libpsl_fuzzer.c
index 963193e..22514c5 100644
--- a/fuzz/libpsl_fuzzer.c
+++ b/fuzz/libpsl_fuzzer.c
@@ -35,8 +35,12 @@ typedef unsigned __int8 uint8_t;
 #include <stdlib.h> /* malloc, free */
 #include <string.h> /* memcpy */
 
-#if defined(WITH_LIBICU)
+#ifdef WITH_LIBICU
+#ifndef WITH_LIBICU_WIN
 #include <unicode/uclean.h>
+#else
+#include <icu.h>
+#endif
 #endif
 
 #include "libpsl.h"
diff --git a/meson.build b/meson.build
index bea815a..2b39678 100644
--- a/meson.build
+++ b/meson.build
@@ -14,6 +14,7 @@ buildtype = get_option('buildtype')
 notfound = dependency('', required : false)
 libidn2_dep = notfound
 libicu_dep = notfound
+libicu_win_dep = notfound
 libidn_dep = notfound
 libunistring = notfound
 networking_deps = notfound
@@ -57,6 +58,16 @@ if ['libicu', 'auto'].contains(enable_runtime)
   endif
 endif
 
+if host_machine.system() == 'windows' and ['libicu-win', 'auto'].contains(enable_runtime)
+  libicu_win_dep = cc.find_library('icu', required: false)
+  if libicu_win_dep.found()
+    libicu_dep = libicu_win_dep
+    enable_runtime = 'libicu' # Treat libicu-win as a libicu variant.
+  elif enable_runtime == 'libicu-win'
+    error('You requested libicu-win but it is not found.')
+  endif
+endif
+
 if ['libidn', 'auto'].contains(enable_runtime)
   libidn_dep = dependency('libidn', required : false)
   if not libidn_dep.found() and cc.has_header('idna.h')
@@ -89,6 +100,7 @@ config = configuration_data()
 config.set_quoted('PACKAGE_VERSION', meson.project_version())
 config.set('WITH_LIBIDN2', enable_runtime == 'libidn2')
 config.set('WITH_LIBICU', enable_runtime == 'libicu')
+config.set('WITH_LIBICU_WIN', libicu_win_dep.found())
 config.set('WITH_LIBIDN', enable_runtime == 'libidn')
 config.set('ENABLE_BUILTIN', enable_builtin)
 config.set('HAVE_UNISTD_H', cc.check_header('unistd.h'))
diff --git a/meson_options.txt b/meson_options.txt
index d66f256..e6464ae 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -1,5 +1,5 @@
 option('runtime', type : 'combo',
-  choices : ['libidn2', 'libicu', 'libidn', 'no', 'auto'], value : 'auto',
+  choices : ['libidn2', 'libicu', 'libicu-win', 'libidn', 'no', 'auto'], value : 'auto',
   description : 'Specify the IDNA library used for libpsl run-time conversions')
 
 option('builtin', type : 'boolean',
diff --git a/src/psl.c b/src/psl.c
index 28caff9..ee3e5d3 100644
--- a/src/psl.c
+++ b/src/psl.c
@@ -70,10 +70,14 @@ typedef SSIZE_T ssize_t;
 #endif
 
 #ifdef WITH_LIBICU
-#	include <unicode/uversion.h>
-#	include <unicode/ustring.h>
-#	include <unicode/uidna.h>
-#	include <unicode/ucnv.h>
+#	ifndef WITH_LIBICU_WIN
+#		include <unicode/uversion.h>
+#		include <unicode/ustring.h>
+#		include <unicode/uidna.h>
+#		include <unicode/ucnv.h>
+#	else
+#		include <icu.h>
+#	endif
 #elif defined(WITH_LIBIDN2)
 #	include <iconv.h>
 #	include <idn2.h>
@@ -116,6 +120,10 @@ typedef SSIZE_T ssize_t;
 #define PRIV_PSL_FLAG_PRIVATE   (1<<3) /* entry of PRIVATE section */
 #define PRIV_PSL_FLAG_PLAIN     (1<<4) /* just used for PSL syntax checking */
 
+#ifdef WITH_LIBICU_WIN
+#	define U_ICU_VERSION "Windows"
+#endif
+
 typedef struct {
 	char
 		label_buf[128];
